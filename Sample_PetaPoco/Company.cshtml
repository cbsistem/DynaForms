@using DynaForms
@{
    
    Layout = "_SiteLayout.cshtml";

    // the db connection is defined in _AppStart
    var db = App.db as PetaPoco.Database;

    // allowed actions is "list", "insert", "edit" and "delete"
    var action = UrlData[0];
    var id = UrlData[1];

    // check to see if the action string is valid
    if (action == "") 
    { 
        action = "list"; 
    }
    
    // is check id parameter, if it's not an int, fall back to list
    if ((action == "edit" || action == "delete") && !id.IsInt()) 
    { 
        action = "list"; 
    }

    // the Company class is defined in App_Code/Models
    Company company = null;

    if (action == "insert")
    {
        company = new Company();
        company.CreatedDateTime = DateTime.Now;
    }
    else if (action == "edit" || action == "delete")
    {
        company = db.Single<Company>(id.AsInt());
        if (company == null)
        {
            action = "list";
        }
        if (action == "delete")
        {
            db.Delete(company);
            Response.Redirect("/company/list");
        }
    }
    
    // create and handle form with DynaForms
    if (action == "edit" || action == "insert")
    {

        var f = new DynaForm("company", company);
        f.AddFormField("Name");
        f.AddFormField("Note", type: InputType.textarea);

        if (IsPost)
        {
            if (f.TryUpdateModel().IsValid)
            {
                if (action == "edit")
                {
                    db.Update(f.Model as Company);
                }
                else if (action == "insert")
                {
                    db.Insert(f.Model as Company);
                }
                Response.Redirect("/company");
            }
            else
            {
                <h1>Error:</h1>
                @f.Html()
            }
        }
        else
        {            
            <h1>@action</h1>
            @f.Html()
        }

    }
    
    // display list
    else if (action == "list")
    {
        var companies = db.Fetch<Company>("SELECT * FROM Company");
        <table>
        @foreach (var c in companies)
        {
            <tr>
                <td>
                    @c.Name
                </td>
                <td>
                    @c.CreatedDateTime.ToShortDateString()
                </td>
                <td>
                    <a href="/company/edit/@c.Id">edit</a>|<a href="/company/delete/@c.Id">delete</a>
                </td>
            </tr>
        }
        </table>
    
        <a href="/company/insert">insert</a>
    }   
}
