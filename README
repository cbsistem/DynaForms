With the help of the one-file DynaForms.cs you can create and handle Html forms easily.

Basic add new form:
-------------------

  var personForm = new DynaForms.DynaForm("person")
    .AddFormField("Name", required: true)        
    .AddFormField("Address")
    .AddFormField("Active", type: DynaForm.FormField.InputType.checkbox);


Display form html:		
------------------
		
  @personForm.Html()		
  
  It will create this form:
  
  <form id="person" method="post" action="#">
   <div class='labelinput'>
    <label for='name'>Name</label>
    <input type='text' id='name' name='name' value=''/>
   </div>
   <div class='labelinput'>
    <label for='address'>Address</label>
    <input type='text' id='address' name='address' value=''/>
   </div>
   <div class='labelcheckbox'>
    <label for='active'>Active</label>
    <input type='checkbox' id='active' name='active'/>
   </div>
   <div class='submit'>
    <input type='submit' id='submit' name='submit' value='submit'/>
   </div>
  </form>
  
  

Handle post:
------------

  if (IsPost)
  {
    if (personForm.TryUpdateModel().IsValid)
    {
      // Form is valid - insert into DB. Get the model from the dynaform, by default it's an ExpandoObject:
      dynamic result = personForm.Model;
      db.Execute("INSERT INTO person (Name, Address, Active) VALUES (@0,@1,@2)", result.Name, result.Address, result.Active);
    }
    else
    {
      // Form is not valid - show form again with validation error messages:
      @personForm.Html()
    }
  }
	
Use client side validation:
---------------------------

DynaForms create a jQuery Validate json-options string, which means you can add client side validation just by including these lines:

<script type='text/javascript' src='http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.5.2.min.js'></script>
<script type='text/javascript' src='http://ajax.aspnetcdn.com/ajax/jquery.validate/1.8/jquery.validate.min.js'></script>

@Html.Raw(personForm.ClientSideScript())


Change html output for the controls:
------------------------------------

Change the html templates for the "field controls" by editing the templates in Dynaforms.cs:
public const string TemplateInputText = @"
 <div class='labelinput'>
  <label for='{fieldName}'>{labelText}</label>
  <input type='text' id='{fieldName}' name='{fieldName}' value='{value}'/>{errorMessage}
 </div>";

 
More information:
-----------------
There are tests and a sample to look at.